/* normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

 html {
    line-height: 1.15;
    /* 1 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
}

/* Sections
     ========================================================================== */

/**
   * Remove the margin in all browsers.
   */

body {
    margin: 0;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */

h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */

hr {
    box-sizing: content-box;
    /* 1 */
    height: 0;
    /* 1 */
    overflow: visible;
    /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

pre {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/* Text-level semantics
     ========================================================================== */

/**
   * Remove the gray background on active links in IE 10.
   */

a {
    background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */

abbr[title] {
    border-bottom: none;
    /* 1 */
    text-decoration: underline;
    /* 2 */
    text-decoration: underline dotted;
    /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */

b,
strong {
    font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

code,
kbd,
samp {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */

small {
    font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

/* Embedded content
     ========================================================================== */

/**
   * Remove the border on images inside links in IE 10.
   */

img {
    border-style: none;
}

/* Forms
     ========================================================================== */

/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */

button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    /* 1 */
    font-size: 100%;
    /* 1 */
    line-height: 1.15;
    /* 1 */
    margin: 0;
    /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */

button,
input {
    /* 1 */
    overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */

button,
select {
    /* 1 */
    text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */

button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */

::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */

:-moz-focusring {
    outline: 1px dotted ButtonText;
}

/**
   * Remove the additional ` ':invalid' ` styles in Firefox.
   */

:-moz-ui-invalid {
    box-shadow: none;
}

/* Interactive
     ========================================================================== */

/*
   * Add the correct display in Chrome and Safari.
   */

details {
    display: block;
}

/*
   * Add the correct display in Edge, IE, and Firefox.
   */

summary {
    display: list-item;
}

/* Misc
     ========================================================================== */

/**
   * Add the correct display in IE 10-.
   */

template {
    display: none;
}

/**
   * Add the correct display in IE 10-.
   */

[hidden] {
    display: none;
}


/**
  * aqui empieza el proyecto
  */


/*llamar al :root*/
:root {
    --color-primary: #d73953;
    --color-black: #090909;
    --color-white: #ffffff;
    --color-light-grey: #f3f3f3;
    --color-dark-grey: #353535;
    --text-color: var(--color-black);
    --font-family-base: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    --font-family-title: 'Raleway', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    --font-weight-regular: 400;
    --font-weight-bold: 700;
    --font-size-small: 1.2rem;
    --font-size-medium: 1.6rem;
    --font-size-large: 1.8rem;
    --font-size-x-large: 2.3rem;
    --font-size-xx-large: 4.8rem;
    --section-padding: 5rem 0;
    --section-header-padding: 0 0 3rem;
    --section-body-padding: 0 0 3rem;
    --section-footer-padding: 3rem 0 0;
    --section-footer-align: center;
    --footer-padding: 5rem 0 1rem;
    --section-header-align: center;
    --line-height-small: 1.2;
    --line-height-base: 1.5;
    --line-height-big: 1.8;
    --section-tagline-transform: uppercase;
    --section-title-margin: 0;
    --section-title-color: var(--color-black);
    --nav-item-font-family: var(--font-family-title);
    --nav-item-font-weight: var(--font-weight-bold);
    --nav-item-font-size: var(--font-size-medium);
    --nav-item-letter-spacing: 0.04rem;
    --nav-item-display: inline-block;
    --nav-item-margin: 0 0 3rem 0;
    --nav-item-link-hover: var(--color-primary);
    --section-tagline-margin: 0;
    /*button*/
    --button-display: inline-block;
    --button-padding: 1.5rem 3rem;
    --button-border: 0.2rem solid var(--color-primary);
    --button-color: var(--color-black);
    --button-text-decoration: none;
    --button-font-size: var(--font-size-large);
    --button-hover-color: var(--color-white);
    --button-hover-text-decoration: none;
    --button-hover-background: var(--color-primary);
    /*header*/
    --header-padding: 4rem 0 0;
    --header-logo-position: relative;
    --header-logo-link-display: inline-block;
    --header-logo-link-position: absolute;
    --header-logo-link-top: -1rem;
    --header-logo-link-left: 0;
    /*crear custom*/
    --transition-duration: 0.3s;
    --transition-cubic-bezier: cubic-bezier(0.17, 0.67, 0, 1.01);
  
}


/*el tamaño*/
*,
*:after,
*:before {
    box-sizing: border-box;
}

/*el html*/
html {
    scroll-behavior: smooth;
    font-size: 62.5%;
}

/*el body*/
body {
    color: #161616;
    color: var(--text-color);
    font-family: var(--font-family-base);
    font-size: var(--font-size-medium);
    font-weight: var(--font-weight-regular);
    line-height: var(--line-height-base);
}

/*llamar a link*/
a {
    color: #161616;
    color: var(--text-color);
    text-decoration: none;
}

a:link {
    color: var(--text-color);
    text-decoration: none;
}

a:visited {
    font-style: italic;
    /* Establece el estilo itálico para los enlaces visitados */
}


a:hover {
    text-decoration: underline;
}


a:active {
    background-color: var(--color-light-grey);
}

/*llamar la clases*/



.visually-hidden {
    display: none;
    /* Oculta visualmente los elementos con la clase .visually-hidden */
}

.card-category {
    color: #D73953;
    color: var(--color-primary);
    /* Utiliza la variable --color-primary para el color del texto */

}

.section-tagline {
    color: #D73953;
}

/* Estilos para la clase .section-tagline */
.section-tagline {
    color: var(--color-primary);
    font-family: var(--font-family-title);
    text-transform: var(--section-tagline-transform);
    font-weight: var(--font-weight-bold);
    margin: var(--section-tagline-margin);
}

.container {
    width: 960px;
    margin-left: auto;
    margin-right: auto;
}

.section {
    padding: var(--section-padding);
}

.section-body {
    padding: var(--section-body-padding);
}

.section-header {
    text-align: var(--section-header-align);
    padding: var(--section-header-padding);
}

.section-title {
    font-family: var(--font-family-title);
    font-size: var(--font-size-xx-large);
    font-weight: var(--font-weight-bold);
    margin: var(--section-title-margin);
    color: var(--section-title-color);
}

/* Estilos para la clase .navbar-menu */
.navbar-menu {
    float: right;
}

/* Estilos para la clase .nav */
.nav {
    margin: 0;
    padding: 0;
    list-style: none;
    text-align: center;
}

/* Estilos para la clase .nav-item dentro de .nav */
.nav .nav-item {
    font-family: var(--nav-item-font-family);
    font-weight: var(--nav-item-font-weight);
    font-size: var(--nav-item-font-size);
    letter-spacing: var(--nav-item-letter-spacing);
    display: var(--nav-item-display);
    margin: var(--nav-item-margin);
}

/* Estilos para la clase .nav-link dentro de .nav */
.nav .nav-link {
    display: block;
    padding: 0.5rem 2rem;
    color: var(--color-white);
}

/* Estilos al pasar el cursor sobre .nav-link dentro de .nav */
.nav .nav-link:hover {
    color: var(--nav-item-link-hover);
}

/* Estilos para los pseudo elementos before de nav-link dentro de nav */
.nav .nav-link::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--color-white);
    width: 0;
    height: 5%;
}

/* Estilos para los pseudo elementos before de nav-link cuando nav-item está en hover y dentro de nav */
.nav .nav-item:hover .nav-link::before {
    background-color: var(--color-primary);
    width: 100%;
    height: 5px;
    transition-duration: 6000ms;
}

/* Estilos para todas las ul con la clase .row */
ul.row {
    margin: 0;
    padding: 0;
    list-style: none;
}

/* Estilos para la clase .col-1-3 */
.col-1-3 {
    width: 33.33%;

}

/* Estilos para la clase .col-1-2 */
.col-1-2 {
    width: 50%;

}

/* Estilos para la clase .col por todos */
[class^="col-"] {
    float: left;
    padding: 0.5rem;
}


/*llamar los  *h */

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-family-title);
    font-weight: var(--font-weight-bold);
}


/* Estilos para la clase .section-footer */
.section-footer {
    padding: var(--section-footer-padding);
    text-align: var(--section-footer-align);
}

/* Estilos para la clase .footer */
.footer {
    padding: var(--footer-padding);
}

/* Estilos para la clase .footer-copyright */
.footer-copyright {
    margin: 0;
    font-size: var(--font-size-small);
    color: var(--text-color);
}

/* Estilos para todas las ul dentro de la clase .footer */
.footer ul {
    text-align: right;
    
}

/* Crea una nueva fila después de cada instancia de la clase .row */
.row:after {
    content: "";
    display: table;
    clear: both;
}

[data-section-theme="dark"] {
    /* Redefinir las propiedades personalizadas */
    --text-color: var(--color-white);
    --section-title-color: var(--color-white);

    /* Establecer el fondo */
    background-color: var(--color-black);
    /*estilo del button*/
    --button-color: var(--color-white);
}

/*
  Con estos estilos, la clase footer-address tendrá el color de texto definido por la propiedad --text-color. La clase social-link se mostrará como un elemento de bloque, y los elementos svg dentro de la clase social-link tendrán el color de relleno definido por la propiedad --text-color.
  */

/* Estilos para la clase footer-address */
.footer-address {
    color: var(--text-color);
}

/* Estilos para la clase social-link */
.social-link {
    display: block;
}

/* Estilos para la clase social-link y sus hijos svg */
.social-link>svg {
    fill: var(--text-color);
}


/* Estilos para card-title dentro de card-services
  Con estos estilos, los elementos con la clase card-title dentro de card-services no tendrán márgenes. Los elementos a dentro de card-services se mostrarán como elementos de bloque con un relleno de 2 veces el tamaño de la fuente base, y tendrán un color de fondo definido por la propiedad --color-light-grey. Cuando el cursor se encuentre sobre los elementos a dentro de card-services, el color de texto será el definido por --color-white, el color de fondo será el definido por --color-primary, y no habrá decoración de texto.
  
  */
.card-services .card-title {
    margin: 0;
}

/* Estilos para a dentro de card-services */
.card-services a {
    display: block;
    padding: 2rem;
    border-radius: 10px;
    background-color: var(--color-light-grey);
}

/* Estilos para el estado hover de a dentro de card-services */
.card-services a:hover {
    color: var(--color-white);
    background-color: var(--color-primary);
    text-decoration: none;
    border-radius: 10px;
}

/* Estilos para la clase button 
  Con estos estilos, hemos definido las propiedades personalizadas en el selector :root, luego hemos creado un selector para la clase .button con estilos basados en las propiedades personalizadas, y también hemos definido estilos para el estado hover de la clase .button. Además, hemos agregado una regla para el atributo [data-section-theme="dark"], que redefine la variable --button-color para que apunte al valor de --color-white.
  */
.button {
    display: var(--button-display);
    padding: var(--button-padding);
    border: var(--button-border);
    font-size: var(--button-font-size);
    color: var(--button-color);
    text-decoration: var(--button-text-decoration);
}

/* Estilos para el estado hover de la clase button */
.button:hover {
    color: var(--button-hover-color);
    text-decoration: var(--button-hover-text-decoration);
    background: var(--button-hover-background);
}


/*
  Con estos estilos, hemos agregado el selector .card-testimonial para centrar el texto, luego hemos dirigido el selector .card-avatar que está dentro de .card-testimonial para redondear los bordes y establecer el ancho y alto a 10 veces el tamaño de la raíz (root), y finalmente hemos seleccionado la etiqueta <cite> que se encuentra dentro de .card-quote dentro de .card-testimonial para mostrarlo como un elemento de bloque, agregar un espacio en la parte superior y establecer el color del texto según la variable --color-primary
  */

/* Estilos para el selector card-testimonial */
.card-testimonial {
    text-align: center;
}

/* Estilos para el selector card-avatar dentro de card-testimonial */
.card-testimonial .card-avatar {
    border-radius: 50%;
    width: 10rem;
    /* Aquí 1 rem equivale a 10px */
    height: 10rem;
    /* Aquí 1 rem equivale a 10px */
}

/* Estilos para la etiqueta <cite> dentro de card-quote dentro de card-testimonial */
.card-testimonial .card-quote cite {
    display: block;
    padding-top: 1rem;
    /* Aquí 1 rem equivale a 10px */
    color: var(--color-primary);
}

/* Estilos para card-quote dentro de card-testimonial */
.card-testimonial .card-quote {
    position: relative;
  }
  
  /* Estilos para el pseudo elemento before de card-quote dentro de card-testimonial */
  .card-testimonial .card-quote::before {
    content: "\201C";
    position: absolute;
    top: -4.5rem;
    left: -1rem;
    color: #efeded;
    font-size: 10rem;
    z-index: -1;
  }
  
/*
  Con estos estilos, hemos agregado el selector .section-hero para establecer el tamaño del fondo con una sintaxis de 2 valores, donde el ancho es de 90 rem (1 rem equivale a 10 px) y la altura se ajusta automáticamente. Luego, hemos seleccionado el selector .section-title dentro de .section-hero para agregar un margen de 5 rem en la parte inferior. Finalmente, hemos seleccionado el selector .section-inner dentro de .section-hero para agregar relleno de 10 rem en la parte superior, 40 rem en el lado derecho, 2 rem en la parte inferior y 0 en el lado izquierdo, todo en una sola regla.

  */

/* Estilos para el selector section-hero */
.section-hero {
    background-size: 90rem auto;
}

/* Estilos para el selector section-title dentro de section-hero */
.section-hero .section-title {
    margin-bottom: 5rem;
    /* Aquí 1 rem equivale a 10px */
}

/* Estilos para el selector section-inner dentro de section-hero */
.section-hero .section-inner {
    padding: 10rem 40rem 2rem 0;
    /* Aquí 1 rem equivale a 10px */
}


/*
  Con estos estilos, hemos creado las propiedades personalizadas con sus respectivos valores. Luego, hemos creado el selector .header para aplicar el relleno con el valor de la variable header-padding. Después, hemos creado el selector .header-logo para posicionar el logotipo del encabezado con el valor de la variable header-logo-position. Finalmente, hemos seleccionado el enlace dentro de .header-logo para renderizar el enlace con el valor de la variable header-logo-link-display y posicionarlo con los valores de las variables header-logo-link-position, header-logo-link-top y header-logo-link-left.
  */
/* Estilos para el selector header */
.header {
    padding: var(--header-padding);
}

/* Estilos para el selector header-logo */
.header-logo {
    position: var(--header-logo-position);
}

/* Estilos para el enlace dentro de header-logo */
.header-logo a {
    display: var(--header-logo-link-display);
    position: var(--header-logo-link-position);
    top: var(--header-logo-link-top);
    left: var(--header-logo-link-left);
}

/* Estilos para card-outer dentro de card-work
    Con estos estilos, hemos realizado los cambios solicitados para los elementos dentro de .card-work, incluyendo el posicionamiento, los tamaños y los colores de fondo. También hemos agregado pseudo elementos after para los enlaces dentro de .card-title y .card-work. Estos estilos permiten mostrar los títulos y enlaces de manera adecuada al interactuar con el elemento .card-work al pasar el cursor sobre él.
*/
.card-work .card-outer {
    position: relative;
    overflow: hidden;
  }
  
  /* Estilos para la imagen dentro de card-image dentro de card-work */
  .card-work .card-image img {
    height: 30rem;
    width: 100%;
    object-fit: cover;
    vertical-align: bottom;
    border-radius: 15px;
  }
  
  /* Estilos para card-inner dentro de card-work */
  .card-work .card-inner {
    position: absolute;
    top: -0.1rem;
    left: -0.1rem;
    right: -0.1rem;
    z-index: 1;
  }
  
  /* Estilos para card-inner cuando card-work está en hover */
  .card-work:hover .card-inner {
    background-color: rgba(0, 0, 0, 0.7);
  }
  
  /* Estilos para card-title dentro de card-work */
  .card-work .card-title {
    text-align: center;
    margin: 0;
    opacity: 0.1;
    height: 100%;
    position: relative;
  }
  
  /* Estilos para el enlace dentro de card-title y card-work */
  .card-work .card-title a {
    display: block;
    text-decoration: none;
    padding-top: 45%;
  }
  
  /* Crear pseudo elementos after para el enlace dentro de card-title y card-work */
  .card-work .card-title a::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  
  /* Estilos para card-title cuando card-work está en hover */
  .card-work:hover .card-title {
    opacity: 1;
  }

  /*animamcion*/

  /* Transformaciones en card-work */
  .card-work:hover .card-image {
    transform: scale(1.2);
    border-radius: 15px;
  }
  
  .card-work:hover .card-outer {
    transform: scale(0.95);
    border-radius: 15px;
  }
  
  /* Animaciones en los elementos de navegación */
  .nav .nav-link::before {
    transition: var(--transition-duration) var(--transition-cubic-bezier);
  }
  
  /* Transiciones en los card-works */
  .card-work .card-image {
    transition: var(--transition-duration) var(--transition-cubic-bezier);
  }
  
  .card-work .card-inner {
    transition: var(--transition-duration) var(--transition-cubic-bezier);
  }
  
  /* Transiciones en el hover del botón */
  .button:hover {
    transition-duration: var(--transition-duration);
    transition-property: color, background-color;
  }
  
  /*
  Explicación línea por línea:

 Crear custom properties `: Esta línea es un comentario que indica que se van a definir propiedades personalizadas (variables) en el siguiente bloque de código.

2. `:root`: Es un selector que apunta al elemento raíz del documento HTML, es decir, el elemento `<html>`. Es el lugar donde se definen las propiedades personalizadas (variables) que se aplicarán en todo el documento.

3. `--transition-duration: 0.3s;`: Esta línea define una propiedad personalizada llamada `--transition-duration` y le asigna el valor `0.3s`, que indica la duración de las transiciones que se usarán en el sitio.

4. `--transition-cubic-bezier: cubic-bezier(0.17, 0.67, 0, 1.01);`: Esta línea define otra propiedad personalizada llamada `--transition-cubic-bezier` y le asigna el valor `cubic-bezier(0.17, 0.67, 0, 1.01)`. Esta propiedad define una función de curva de Bezier para controlar el ritmo de las transiciones.

5. `/* Transformaciones en card-work `: Este comentario simplemente indica que las siguientes líneas de código contienen estilos relacionados con las transformaciones cuando el cursor está sobre el elemento con la clase `.card-work`.

6. `.card-work:hover .card-image`: Este selector selecciona el elemento con la clase `.card-image` que está dentro del elemento con la clase `.card-work` cuando el cursor está sobre el elemento con la clase `.card-work` (hover). La propiedad `transform` con el valor `scale(1.2)` aplica una escala de 1.2 al elemento `.card-image` cuando se activa el hover.

7. `.card-work:hover .card-outer`: Similar al punto 6, este selector selecciona el elemento con la clase `.card-outer` que está dentro del elemento con la clase `.card-work` cuando el cursor está sobre el elemento con la clase `.card-work` (hover). La propiedad `transform` con el valor `scale(0.95)` aplica una escala de 0.95 al elemento `.card-outer` cuando se activa el hover.

8. `/* Animaciones en los elementos de navegación `: Este comentario indica que las siguientes líneas de código contienen estilos relacionados con las animaciones en los elementos de navegación.

9. `.nav .nav-link::before`: Este selector selecciona el pseudo-elemento `::before` de los elementos con la clase `.nav-link` que están dentro de un elemento con la clase `.nav`. La propiedad `transition` con los valores `var(--transition-duration)` y `var(--transition-cubic-bezier)` especifica la duración y la función de curva de Bezier para las transiciones en el pseudo-elemento `::before`.

10. `.card-work .card-image`: Este selector selecciona el elemento con la clase `.card-image` que está dentro de un elemento con la clase `.card-work`. La propiedad `transition` con los valores `var(--transition-duration)` y `var(--transition-cubic-bezier)` especifica la duración y la función de curva de Bezier para las transiciones en el elemento `.card-image`.

11. `.card-work .card-inner`: Este selector selecciona el elemento con la clase `.card-inner` que está dentro de un elemento con la clase `.card-work`. La propiedad `transition` con los valores `var(--transition-duration)` y `var(--transition-cubic-bezier)` especifica la duración y la función de curva de Bezier para las transiciones en el elemento `.card-inner`.

12. `/* Transiciones en el hover del botón `: Este comentario indica que las siguientes líneas de código contienen estilos relacionados con las transiciones en el hover del botón.

13. `.button:hover`: Este selector selecciona el elemento con la clase `.button` cuando el cursor está sobre el elemento (hover). Las propiedades `transition-duration` y `transition-property` especifican la duración y las propiedades que serán animadas durante la transición cuando el botón está en estado de hover. En este caso, las propiedades animadas son `color` y `background-color`. Las propiedades `transition-duration` y `transition-property` obtienen sus valores de las propiedades personalizadas `--transition-duration` y `--transition-cubic-bezier`, respectivamente, que definimos previamente en el bloque `:root`. 
    */